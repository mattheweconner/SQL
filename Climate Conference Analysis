  CREATE TABLE vips (
     member_id INTEGER PRIMARY KEY
   , last_name TEXT
   , first_name TEXT
   , event INTEGER
   , provides_feedback_to INTEGER
   , association TEXT
   , assoc_type TEXT
   , member_since INTEGER
   );
   
CREATE TABLE reservations ( 
    member_id INTEGER
  , hotel INTEGER
  , welcome_rsvp BIT
  , dinner_rsvp BIT
  );
 
 
CREATE TABLE events (
    event_id INTEGER PRIMARY KEY
  , event_name TEXT
  , event_type TEXT
  );
  

CREATE TABLE hotels (
    hotel_id INTEGER PRIMARY KEY
  , hotel_name TEXT
  , address TEXT
  );


INSERT INTO vips VALUES
(2814, 'Fletcher', 'David', 5, 3742, 'Anishinabek Educational Institute', 'education', 2004)
,(1944, 'Kim', 'Jiho', 4, 4230, 'Appalachian State', 'education', 1991)
,(3889, 'Kowalski', 'Alex', 9, 3460, 'Brigg & McKinnnon AEC', 'private', 2015)
,(3775, 'Al-Hassan', 'Amina', 6, 3891, 'California Department of Water Resources', 'government', 2013)
,(4003, 'Chang', 'Nathan', 8, 3960, 'Chang Engineers, LLC', 'private', 2017)
,(3490, 'Anderson', 'Shanae', 2, 4315, 'Chicago Department of Public Health', 'government', 2008)
,(3077, 'Murphy', 'Aisling', 3, 2731, 'Climate Impacts on Farming Institute', 'research', 2006)
,(3960, 'Ivanov', 'Dmitri', 6, 2814, 'Cooperative Institute for Climate, Ocean, and Ecosystem Studies', 'research', 2016)
,(4402, 'Bennett', 'Leah', NULL, NULL, 'Denver Climate Research Foundation', 'research', 2024)
,(3891, 'Roy', 'Harper', 4, 3077, 'Environmental Science Associates', 'private', 2015)
,(4386, 'Silva', 'Thiago', NULL, NULL, 'Everglades Research Institute', 'research', 2023)
,(4297, 'Chukwu', 'Ifeoma', 9, 2716, 'Georgia State University', 'education', 2020)
,(3189, 'Martinez', 'Isabella', 8, 2011, 'Iowa State University', 'education', 2007)
,(3491, 'Gonzalez', 'Victor', 5, 3047, 'McGill University', 'education', 2008)
,(3742, 'Brown', 'Timothy', 3, 3490, 'Michigan State University', 'education', 2012)
,(4361, 'Riley', 'Daniel', 6, 1944, 'Minnesota Water Board', 'education', 2023)
,(1934, 'Garcia', 'Mateo', NULL, NULL, 'Oklahoma Department of Wildlife Conservation', 'government', 1990)
,(2011, 'Patel', 'Anika', 7, 3491, 'Renewable Energy Research Center, Honolulu', 'research', 1995)
,(4315, 'Shepherd', 'Priya', 10, 4003, 'Tech517', 'private', 2022)
,(1738, 'Johnson', 'Denny', NULL, NULL, 'Texas Department of Conservation and Natural Resources', 'government', 1987)
,(4230, 'Parker', 'Moss', 2, 3719, 'University of California, Davis', 'education', 2019)
,(2731, 'Rivera', 'Juan', 1, 4297, 'University of Montana', 'education', 2003)
,(2091, 'Haines', 'Keisha', 11, 3189, 'University of North Carolina', 'education', 1998)
,(2551, 'Nguyen', 'Linh', 2, 2091, 'University of Pennsylvania', 'education', 2002)
,(3047, 'Singh', 'Aarav', 4, 2551, 'US Department of Fish and Wildlife', 'government', 2005)
,(4112, 'Fernandez', 'Lucia', NULL, NULL, 'US Department of Fish and Wildlife', 'government', 2018)
,(3719, 'Denton', 'K. L.', 11, 3889, 'US Department of Housing and Urban Development', 'government', 2011)
,(3460, 'Chen', 'Beverly', 7, 4361, 'US Department of Natural Resources', 'government', 2008)
,(2716, 'Rodriguez', 'Sofia', 7, 3775, 'US Department of Renewable Energy', 'government', 2003)
,(2800, 'Lee', 'Min-Jun', NULL, NULL, 'US Department of Renewable Energy', 'government', 2004)
;


INSERT INTO reservations VALUES
 (3491,  1, 1, 1)
,(4361,  1, 1, 1)
,(3047,  2, 1, 1)
,(3775,  1, 1, 1)
,(4003,  3, 0, 1)
,(4402,  2, 1, 1)
,(3891,  3, 1, 1)
,(2011,  1, 1, 1)
,(4808,  2, 1, 1)
,(3490,  1, 0, 1)
,(3189,  1, 1, 1)
,(1944,  1, 0, 1)
,(2716,  2, 0, 1)
,(2551,  2, 1, 1)
,(4386,  2, 0, 1)
,(2814,  3, 1, 1)
,(1738,  2, 0, 1)
,(3960,  1, 1, 1)
,(4315,  3, 1, 0)
,(4722,  2, 1, 1)
,(2731,  3, 1, 1)
,(2091,  1, 1, 0)
,(3889,  3, 1, 1)
,(3742,  2, 0, 1)
,(3719,  2, 0, 1)
,(3460,  2, 1, 1)
,(3077,  2, 0, 1)
,(4420,  1, 1, 0)
,(2800,  2, 0, 1)
,(1934,  3, 1, 1)
;


INSERT INTO events VALUES
  (1, 'Climate Change Communication: Engaging the Public and Policy Makers', 'Keynote')
, (2, 'Climate Change and Public Health: Risks and Responses', 'Panel')
, (3, 'Climate Change and Agriculture: Ensuring Food Security', 'Panel')
, (4, 'Biodiversity and Ecosystem Services in a Changing Climate', 'Panel')
, (5, 'Indigenous Knowledge and Climate Change Adaptation', 'Panel')
, (6, 'The Role of Oceans in Climate Change: Impacts and Solutions', 'Panel')
, (7, 'Climate Change and Renewable Energy: Innovations and Challenges', 'Panel')
, (8, 'Climate Justice and Equity: Addressing Disproportionate Impacts', 'Panel')
, (9, 'The Economic Impact of Climate Change: Costs and Opportunities', 'Panel')
, (10, 'Technological Innovations for Climate Monitoring and Assessment', 'Workshop')
, (11, 'Urban Resilience: Designing Climate-Smart Cities', 'Workshop')
, (12, 'The Role of Policy in Combating Climate Change', 'Workshop')
;


INSERT INTO hotels VALUES
   (1, 'Hyatt Downtown', '392 South Main Street, Cityville, PA')
 , (2, 'Marriott', '1240 Marshall Avenue, Cityville, PA')
 , (3, 'Four Season''s', '900 Winter Road, Cityville, PA')
 ;





1.)  Find all VIPs and their hotel reservations?  
      -I used a LEFT JOIN to include all VIPs, even those without reservations, then I Joined three tables: vips, reservations, and hotels
      -then displayed VIP name, organization, and hotel name (if reserved)
      -Finally, I Ordered alphabetically by VIP last name

SELECT vips.last_name,
vips.first_name,
vips.association,
hotels.hotel_name
FROM vips
LEFT JOIN reservations
ON vips.member_id = reservations.member_id
LEFT JOIN hotels
ON hotels.hotel_id = reservations.hotel
ORDER BY vips.last_name ASC;


2.)   Find VIPs who RSVP’d to the dinner and the hotel they’re staying at?
       -In this example, I used INNER JOINs between vips, reservations, and hotels
       -filtered for only those with dinner_rsvp = 1 (attending the dinner)
       -with the SELECT command, I displayed each VIP’s name and the hotel they’re staying at
       -ordered the results by last name
       -used aliases to keep the query clean and readable

SELECT v.last_name,
v.first_name,
h.hotel_name
FROM vips AS v
INNER JOIN reservations AS r
ON v.member_id = r.member_id
INNER JOIN hotels AS h
ON r.hotel = h.hotel_id
WHERE r.dinner_rsvp = 1
ORDER BY v.last_name ASC;

3.)  Show VIPs, their hotel details, and the event they’re attending.
      -In this query, I used multiple INNER JOINs to connect vips, reservations, hotels, and events
      -retrieved each VIP’s name, the hotel name and address, and the event name
      -ordered the output by last name
      -used table aliases to make the query cleaner and easier to read

SELECT v.last_name,
v.first_name,
h.hotel_name,
h.address AS hotel_address,
e.event_name
FROM vips AS v
INNER JOIN reservations AS r
ON v.member_id = r.member_id
INNER JOIN hotels AS h
ON r.hotel = h.hotel_id
INNER JOIN events AS e
ON v.event = e.event_id
ORDER BY v.last_name;

4.)  Match VIPs with the people they provide feedback to.
       -In this query, I used a SELF JOIN on the vips table
       -assigned aliases: giver (the VIP giving feedback) and receiver (the VIP receiving it)
       -joined the table where giver.provides_feedback_to = receiver.member_id
       -selected both the giver’s and receiver’s member IDs and full names
       -filtered out VIPs who don’t provide feedback (IS NOT NULL on provides_feedback_to)

SELECT giver.member_id AS G_member_id,
giver.last_name AS G_last_name,
giver.first_name AS G_first_name,
receiver.member_id AS R_member_id,
receiver.last_name AS R_last_name,
receiver.first_name AS R_first_name
FROM vips AS giver
INNER JOIN vips AS receiver
ON giver.provides_feedback_to = receiver.member_id
WHERE giver.provides_feedback_to IS NOT null;

5.)  Find VIPs who joined after the average member year?
      -I used a subquery to calculate the average join year from the member_since column
      -selected VIPs whose member_since year is greater than the average
      -displayed each VIP’s ID, name, and join year
      -ordered the results by join year in descending order (most recent first)

SELECT member_id,
last_name,
first_name,
member_since
FROM vips
WHERE member_since > (SELECT AVG(member_since)
FROM vips)
ORDER BY member_since DESC;

6.)  Find organizations with more than 1 VIP attending?
      -I used GROUP BY to organize VIPs by association and assoc_type
      -counted how many VIPs belong to each organization
      -used HAVING to filter for only those with more than 1 VIP
      -ordered results by number of attendees, highest to lowest

SELECT association,
assoc_type,
Count (*) AS vip_count
FROM vips
GROUP BY association , assoc_type
HAVING COUNT(*) > 1
ORDER BY vip_count DESC;




